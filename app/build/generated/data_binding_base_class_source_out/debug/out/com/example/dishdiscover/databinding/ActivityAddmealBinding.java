// Generated by view binder compiler. Do not edit!
package com.example.dishdiscover.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dishdiscover.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddmealBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText Category;

  @NonNull
  public final EditText Comment;

  @NonNull
  public final EditText Cooktime;

  @NonNull
  public final EditText Description;

  @NonNull
  public final RadioGroup Difficutly;

  @NonNull
  public final RadioButton Easy;

  @NonNull
  public final RadioButton Hard;

  @NonNull
  public final Button HomeAddRecipe;

  @NonNull
  public final EditText MealName;

  @NonNull
  public final RadioButton Medium;

  @NonNull
  public final Button NextAddRecipe;

  @NonNull
  public final EditText Prep;

  @NonNull
  public final EditText Rating;

  @NonNull
  public final EditText Serves;

  @NonNull
  public final TextView ingredientsLabelTextView;

  @NonNull
  public final TextView recipeNameTextView;

  @NonNull
  public final LinearLayout stepsnav;

  @NonNull
  public final TextView textView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final EditText url;

  private ActivityAddmealBinding(@NonNull LinearLayout rootView, @NonNull EditText Category,
      @NonNull EditText Comment, @NonNull EditText Cooktime, @NonNull EditText Description,
      @NonNull RadioGroup Difficutly, @NonNull RadioButton Easy, @NonNull RadioButton Hard,
      @NonNull Button HomeAddRecipe, @NonNull EditText MealName, @NonNull RadioButton Medium,
      @NonNull Button NextAddRecipe, @NonNull EditText Prep, @NonNull EditText Rating,
      @NonNull EditText Serves, @NonNull TextView ingredientsLabelTextView,
      @NonNull TextView recipeNameTextView, @NonNull LinearLayout stepsnav,
      @NonNull TextView textView, @NonNull Toolbar toolbar, @NonNull EditText url) {
    this.rootView = rootView;
    this.Category = Category;
    this.Comment = Comment;
    this.Cooktime = Cooktime;
    this.Description = Description;
    this.Difficutly = Difficutly;
    this.Easy = Easy;
    this.Hard = Hard;
    this.HomeAddRecipe = HomeAddRecipe;
    this.MealName = MealName;
    this.Medium = Medium;
    this.NextAddRecipe = NextAddRecipe;
    this.Prep = Prep;
    this.Rating = Rating;
    this.Serves = Serves;
    this.ingredientsLabelTextView = ingredientsLabelTextView;
    this.recipeNameTextView = recipeNameTextView;
    this.stepsnav = stepsnav;
    this.textView = textView;
    this.toolbar = toolbar;
    this.url = url;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddmealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddmealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_addmeal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddmealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Category;
      EditText Category = ViewBindings.findChildViewById(rootView, id);
      if (Category == null) {
        break missingId;
      }

      id = R.id.Comment;
      EditText Comment = ViewBindings.findChildViewById(rootView, id);
      if (Comment == null) {
        break missingId;
      }

      id = R.id.Cooktime;
      EditText Cooktime = ViewBindings.findChildViewById(rootView, id);
      if (Cooktime == null) {
        break missingId;
      }

      id = R.id.Description;
      EditText Description = ViewBindings.findChildViewById(rootView, id);
      if (Description == null) {
        break missingId;
      }

      id = R.id.Difficutly;
      RadioGroup Difficutly = ViewBindings.findChildViewById(rootView, id);
      if (Difficutly == null) {
        break missingId;
      }

      id = R.id.Easy;
      RadioButton Easy = ViewBindings.findChildViewById(rootView, id);
      if (Easy == null) {
        break missingId;
      }

      id = R.id.Hard;
      RadioButton Hard = ViewBindings.findChildViewById(rootView, id);
      if (Hard == null) {
        break missingId;
      }

      id = R.id.HomeAddRecipe;
      Button HomeAddRecipe = ViewBindings.findChildViewById(rootView, id);
      if (HomeAddRecipe == null) {
        break missingId;
      }

      id = R.id.MealName;
      EditText MealName = ViewBindings.findChildViewById(rootView, id);
      if (MealName == null) {
        break missingId;
      }

      id = R.id.Medium;
      RadioButton Medium = ViewBindings.findChildViewById(rootView, id);
      if (Medium == null) {
        break missingId;
      }

      id = R.id.NextAddRecipe;
      Button NextAddRecipe = ViewBindings.findChildViewById(rootView, id);
      if (NextAddRecipe == null) {
        break missingId;
      }

      id = R.id.Prep;
      EditText Prep = ViewBindings.findChildViewById(rootView, id);
      if (Prep == null) {
        break missingId;
      }

      id = R.id.Rating;
      EditText Rating = ViewBindings.findChildViewById(rootView, id);
      if (Rating == null) {
        break missingId;
      }

      id = R.id.Serves;
      EditText Serves = ViewBindings.findChildViewById(rootView, id);
      if (Serves == null) {
        break missingId;
      }

      id = R.id.ingredientsLabelTextView;
      TextView ingredientsLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsLabelTextView == null) {
        break missingId;
      }

      id = R.id.recipeNameTextView;
      TextView recipeNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipeNameTextView == null) {
        break missingId;
      }

      LinearLayout stepsnav = (LinearLayout) rootView;

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.url;
      EditText url = ViewBindings.findChildViewById(rootView, id);
      if (url == null) {
        break missingId;
      }

      return new ActivityAddmealBinding((LinearLayout) rootView, Category, Comment, Cooktime,
          Description, Difficutly, Easy, Hard, HomeAddRecipe, MealName, Medium, NextAddRecipe, Prep,
          Rating, Serves, ingredientsLabelTextView, recipeNameTextView, stepsnav, textView, toolbar,
          url);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
