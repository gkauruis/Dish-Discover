// Generated by view binder compiler. Do not edit!
package com.example.dishdiscover.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dishdiscover.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddrecipeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText Ingredient1;

  @NonNull
  public final EditText MealDescription;

  @NonNull
  public final Button NextAddRecipe;

  @NonNull
  public final TextView ingredientsLabelTextView;

  @NonNull
  public final TextView recipeNameTextView;

  @NonNull
  public final LinearLayout stepsnav;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddrecipeBinding(@NonNull LinearLayout rootView, @NonNull EditText Ingredient1,
      @NonNull EditText MealDescription, @NonNull Button NextAddRecipe,
      @NonNull TextView ingredientsLabelTextView, @NonNull TextView recipeNameTextView,
      @NonNull LinearLayout stepsnav, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.Ingredient1 = Ingredient1;
    this.MealDescription = MealDescription;
    this.NextAddRecipe = NextAddRecipe;
    this.ingredientsLabelTextView = ingredientsLabelTextView;
    this.recipeNameTextView = recipeNameTextView;
    this.stepsnav = stepsnav;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddrecipeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddrecipeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_addrecipe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddrecipeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Ingredient1;
      EditText Ingredient1 = ViewBindings.findChildViewById(rootView, id);
      if (Ingredient1 == null) {
        break missingId;
      }

      id = R.id.MealDescription;
      EditText MealDescription = ViewBindings.findChildViewById(rootView, id);
      if (MealDescription == null) {
        break missingId;
      }

      id = R.id.NextAddRecipe;
      Button NextAddRecipe = ViewBindings.findChildViewById(rootView, id);
      if (NextAddRecipe == null) {
        break missingId;
      }

      id = R.id.ingredientsLabelTextView;
      TextView ingredientsLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsLabelTextView == null) {
        break missingId;
      }

      id = R.id.recipeNameTextView;
      TextView recipeNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipeNameTextView == null) {
        break missingId;
      }

      LinearLayout stepsnav = (LinearLayout) rootView;

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddrecipeBinding((LinearLayout) rootView, Ingredient1, MealDescription,
          NextAddRecipe, ingredientsLabelTextView, recipeNameTextView, stepsnav, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
